{"version":3,"sources":["../../src/index.ts","../../../src/components/JustScroll.tsx","../../../src/hooks/useScrollPosition.ts","../../../src/hooks/useScrollRect.ts","../../../src/hooks/useMouseThumb.ts","App.js","serviceWorker.js","index.js"],"names":["isBrowser","window","react_1","effect","App","useState","isFixed","setIsFixed","onHandler","useCallback","style","height","className","onClick","margin","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b920e7bf.chunk.js","sourcesContent":["\"use strict\";\nfunction __export(m) {\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\n}\nObject.defineProperty(exports, \"__esModule\", { value: true });\n__export(require(\"./components/JustScroll\"));\n//# sourceMappingURL=index.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nrequire(\"../styles.css\");\nconst useScrollPosition_1 = require(\"../hooks/useScrollPosition\");\nconst useScrollRect_1 = require(\"../hooks/useScrollRect\");\nconst useMouseThumb_1 = require(\"../hooks/useMouseThumb\");\nconst DEFAULT_OFFSET = 40;\nexports.JustScroll = ({ children, margin = 0 }) => {\n    const thumbYElement = React.useRef(null);\n    const refWrap = React.useRef(null);\n    const refContent = React.useRef(null);\n    const refBar = React.useRef(null);\n    const [rectArea, refArea] = useScrollRect_1.useScrollRect();\n    /**\n     * handlerScroll for scroll effect\n     */\n    const handlerScroll = React.useCallback(({ prevPos, currPos }) => {\n        if (thumbYElement.current !== null) {\n            const thumbOffsetY = Math.round((currPos.y * refWrap.current.clientHeight) /\n                refContent.current.clientHeight);\n            // synchronization animations and rendering\n            window.requestAnimationFrame(() => {\n                thumbYElement.current.style.transform = `translateY(${thumbOffsetY}px)`;\n            });\n        }\n    }, [refContent, thumbYElement]);\n    /**\n     * subscribe to the change of the scroll\n     */\n    useScrollPosition_1.useScrollPosition(handlerScroll, rectArea, {\n        element: rectArea\n    });\n    const wrapHeight = refWrap.current ? refWrap.current.clientHeight : 0;\n    const clientHeight = refContent.current ? refContent.current.clientHeight : 0;\n    /**\n     * handler mouse thumb\n     */\n    const { handlerMouseDown } = useMouseThumb_1.useMouseThumb(rectArea, wrapHeight, clientHeight);\n    const handlerClickBar = React.useCallback((event) => {\n        console.log('CLICK');\n        // тут реализация клика по бару\n    }, []);\n    React.useEffect(() => {\n        // тут считаем отступ стандартного скролла\n        if (rectArea !== null) {\n            // when rendering, we fix the jump, unlock the scroll\n            rectArea.style.overflow = 'scroll';\n            const wrapHeight = refWrap.current.clientHeight;\n            const contentHeight = refContent.current.clientHeight;\n            const widthScrollbar = rectArea.offsetWidth - rectArea.clientWidth;\n            const padding = DEFAULT_OFFSET + widthScrollbar;\n            // we calculate the height of the custom scroll\n            const relation = Math.round(wrapHeight / (contentHeight / wrapHeight)) + margin * 2;\n            thumbYElement.current.style.height = `${relation}px`;\n            rectArea.style.marginRight = `-${padding}px`;\n            rectArea.style.marginBottom = `-${padding}px`;\n        }\n    }, [refWrap, refContent, margin, rectArea]);\n    React.useEffect(() => {\n        if (refWrap.current !== null && refContent.current !== null) {\n            if (refWrap.current.clientHeight > refContent.current.clientHeight) {\n                refBar.current.style.display = 'none';\n            }\n            else {\n                refBar.current.style.display = 'block';\n            }\n        }\n    }, [children]);\n    return (React.createElement(\"div\", { ref: refWrap, className: \"justScroll\" },\n        React.createElement(\"div\", { ref: refArea, className: \"justScroll-area\" },\n            React.createElement(\"div\", { ref: refBar, className: \"justScroll-bar\", onClick: handlerClickBar },\n                React.createElement(\"div\", { className: \"justScroll-bar--track\" },\n                    React.createElement(\"div\", { ref: thumbYElement, className: \"justScroll-bar--thumb\", onMouseDown: handlerMouseDown }))),\n            React.createElement(\"div\", { ref: refContent, className: \"justScroll-data\" }, children))));\n};\n//# sourceMappingURL=JustScroll.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst react_1 = require(\"react\");\n/**\n * To support server-side rendering (SSR) and prevent\n * unnecessary errors we need to check whether the DOM is ready and exists\n * whether the window context is present. The easiest way to do this is to check,\n * whether the window is defined.\n */\nconst isBrowser = typeof window !== `undefined`;\nfunction getScrollPosition(element) {\n    if (!isBrowser) {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n    if (element === null) {\n        return {\n            x: 0,\n            y: 0\n        };\n    }\n    const target = element ? element : document.body;\n    return { x: target.scrollLeft, y: target.scrollTop };\n}\nfunction useScrollPosition(effect, deps, { element = null, wait = 0 }) {\n    const position = react_1.useRef(getScrollPosition(element));\n    const throttleTimeout = react_1.useRef(null);\n    const callBack = react_1.useCallback(() => {\n        const currPos = getScrollPosition(element);\n        effect({ prevPos: position.current, currPos });\n        position.current = currPos;\n        throttleTimeout.current = null;\n    }, [effect, element]);\n    react_1.useLayoutEffect(() => {\n        const handleScroll = () => {\n            if (wait) {\n                if (throttleTimeout.current === null) {\n                    throttleTimeout.current = setTimeout(callBack, wait);\n                }\n            }\n            else {\n                callBack();\n            }\n        };\n        if (!element) {\n            return () => { };\n        }\n        element.addEventListener(\"scroll\", handleScroll);\n        return () => element.removeEventListener(\"scroll\", handleScroll);\n    }, [deps]);\n}\nexports.useScrollPosition = useScrollPosition;\n//# sourceMappingURL=useScrollPosition.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n//TODO Do I need this function?\nconst react_1 = require(\"react\");\nfunction useScrollRect() {\n    const [rect, setRect] = react_1.useState(null);\n    const ref = react_1.useCallback(node => {\n        if (node !== null) {\n            setRect(node);\n        }\n    }, []);\n    return [rect, ref];\n}\nexports.useScrollRect = useScrollRect;\n//# sourceMappingURL=useScrollRect.js.map","\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst React = require(\"react\");\nconst react_1 = require(\"react\");\nexports.useMouseThumb = (rectArea, wrapHeight, contentHeight) => {\n    const startDown = React.useRef({ screenY: 0, scrollTop: 0 });\n    const flagMouseDown = React.useRef(false);\n    const handlerMouseMove = react_1.useCallback((event) => {\n        if (flagMouseDown.current && rectArea !== null && wrapHeight > 0) {\n            const relation = contentHeight / wrapHeight;\n            const coordY = Math.round(startDown.current.scrollTop +\n                (event.screenY - startDown.current.screenY) * relation);\n            rectArea.scrollTo(0, coordY);\n        }\n    }, [rectArea, contentHeight, wrapHeight]);\n    const handlerMouseUp = react_1.useCallback((event) => {\n        if (flagMouseDown) {\n            flagMouseDown.current = false;\n        }\n        event.preventDefault();\n    }, []);\n    React.useEffect(() => {\n        window.addEventListener('mousemove', handlerMouseMove);\n        window.addEventListener('mouseup', handlerMouseUp);\n        return () => {\n            window.removeEventListener('mousemove', handlerMouseMove);\n            window.removeEventListener('mouseup', handlerMouseUp);\n        };\n    }, [rectArea, handlerMouseUp, handlerMouseMove]);\n    const handlerMouseDown = react_1.useCallback(event => {\n        if (event.type === 'mousedown') {\n            flagMouseDown.current = true;\n            startDown.current.screenY = event.screenY;\n            startDown.current.scrollTop = rectArea.scrollTop;\n        }\n    }, [rectArea]);\n    return { handlerMouseDown };\n};\n//# sourceMappingURL=useMouseThumb.js.map","import React, {useCallback, useState} from 'react';\n// import logo from './logo.svg';\nimport './App.css';\nimport {JustScroll} from 'just-scrollbar';\n\n\nfunction App() {\n    const [isFixed, setIsFixed] = useState(false);\n    const onHandler = useCallback(() => {\n        setIsFixed(!isFixed);\n    }, [isFixed]);\n    const style = {\n        height: isFixed ? '250px' : 'auto'\n    };\n    return (\n        <div className=\"container\">\n            <button onClick={onHandler}>update</button>\n            <JustScroll margin={4}>\n                <div className=\"data\" style={style}>\n                    Впервые термин «вики» для описания веб-сайта был использован в 1995\n                    году Уордом Каннингемом, разработчиком первой вики-системы\n                    WikiWikiWeb, «Портлендского хранилища образцов» программного кода[2],\n                    созданной 25 марта 1995 года, который заимствовал слово гавайского\n                    языка, означающее «быстрый»[3][4]. Каннингем объяснил выбор названия\n                    движка тем, что он вспомнил работника международного аэропорта\n                    Гонолулу, посоветовавшего ему воспользоваться вики-вики шаттлом —\n                    небольшим автобусом, курсировавшим между терминалами аэропорта.\n                    Каннингем же планировал сделать движок, позволявший пользователям\n                    максимально быстро редактировать и создавать статьи. Каннингем\n                    первоначально описал вики как «простейшую онлайн-базу данных, которая\n                    может функционировать»[5]. Позже этому слову был придуман английский\n                    бэкроним «What I Know Is…» («то, что я знаю, это…»)[6]. Впервые термин\n                    «вики» для описания веб-сайта был использован в 1995 году Уордом\n                    Каннингемом, разработчиком первой вики-системы WikiWikiWeb,\n                    «Портлендского хранилища образцов» программного кода[2], созданной 25\n                    марта 1995 года, который заимствовал слово гавайского языка,\n                    означающее «быстрый»[3][4]. Каннингем объяснил выбор названия движка\n                    тем, что он вспомнил работника международного аэропорта Гонолулу,\n                    посоветовавшего ему воспользоваться вики-вики шаттлом — небольшим\n                    автобусом, курсировавшим между терминалами аэропорта. Каннингем же\n                    планировал сделать движок, позволявший пользователям максимально\n                    быстро редактировать и создавать статьи. Каннингем первоначально\n                    описал вики как «простейшую онлайн-базу данных, которая может\n                    функционировать»[5]. Позже этому слову был придуман английский\n                    бэкроним «What I Know Is…» («то, что я знаю, это…»)[6]. Впервые термин\n                    «вики» для описания веб-сайта был использован в 1995 году Уордом\n                    Каннингемом, разработчиком первой вики-системы WikiWikiWeb,\n                    «Портлендского хранилища образцов» программного кода[2], созданной 25\n                    марта 1995 года, который заимствовал слово гавайского языка,\n                    означающее «быстрый»[3][4]. Каннингем объяснил выбор названия движка\n                    тем, что он вспомнил работника международного аэропорта Гонолулу,\n                    посоветовавшего ему воспользоваться вики-вики шаттлом — небольшим\n                    автобусом, курсировавшим между терминалами аэропорта. Каннингем же\n                    планировал сделать движок, позволявший пользователям максимально\n                    быстро редактировать и создавать статьи. Каннингем первоначально\n                    описал вики как «простейшую онлайн-базу данных, которая может\n                    функционировать»[5]. Позже этому слову был придуман английский\n                    бэкроним «What I Know Is…» («то, что я знаю, это…»)[6].\n                </div>\n            </JustScroll>\n        </div>\n    );\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}